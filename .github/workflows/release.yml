name: Release

# https://docs.github.com/en/actions/using-workflows/reusing-workflows#overview
on: 
  workflow_call:
    # see: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_callsecrets
    secrets:
      AWS_IAM_USER:
        required: true
        description: IAM username of the AWS service account
      AWS_ACCESS_KEY_ID:
        required: true
        description: Access key ID of the AWS service account
      AWS_SECRET_ACCESS_KEY:
        required: true
        description: Secret access key of the AWS service account
      AWS_DEFAULT_REGION:
        required: true
        description: Default region of the AWS service account
jobs:

  release:
    name: terraform release
    runs-on: ubuntu-latest
    env:
      # see: https://docs.github.com/en/actions/learn-github-actions/contexts#secrets-context
      AWS_IAM_USER: ${{ secrets.AWS_IAM_USER }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      # see: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
      - name: environment
        run: |
          echo "PATH=$(pwd)/bin:$PATH" >> $GITHUB_ENV

      # see: https://github.com/actions/checkout
      - name: checkout
        uses: actions/checkout@v2

      # see: https://github.com/actions/cache
      - name: cache
        id: cache_tf
        uses: actions/cache@v3
        with:
          path: bin/terraform
          key: ${{ github.repository }}-tf

      - name: install terraform
        if: steps.cache_tf.outputs.cache-hit != 'true'
        run: |
          TER_VER=`curl -s https://api.github.com/repos/hashicorp/terraform/releases/latest | grep tag_name | cut -d: -f2 | tr -d \"\,\v | awk '{$1=$1};1'`
          wget https://releases.hashicorp.com/terraform/${TER_VER}/terraform_${TER_VER}_linux_amd64.zip
          unzip terraform_${TER_VER}_linux_amd64.zip
          if [ ! -d "bin" ]; then
            mkdir bin
          fi
          mv terraform bin/

      - name: init
        run: |
          terraform init

      - name: plan
        run: |
          echo ${{ secrets.AWS_IAM_USER }}
          terraform plan \
            -var-file .tfvars

      #- name: Terraform Plan
      #  if: github.event_name == 'pull_request'
      #  run: terraform plan -no-color -input=false
      #  continue-on-error: true

      #- name: Terraform Plan Status
      #  if: steps.plan.outcome == 'failure'
      #  run: exit 1

      ## Can update conditional if default branches are different
      #- name: Terraform Apply
      #  if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #  run: terraform apply -auto-approve -input=false