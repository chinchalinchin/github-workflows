name: Release

on: workflow_call

jobs:

  release:
    name: terraform release
    runs-on: debian
    steps:
      - name: clone
        uses: actions/checkout@v2

      - name: cache
        id: cache_tf
        uses: actions/cache@v2
        with:
          path: bin/terraform
          key: ${{ github.repository }}-tf

      # see: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
      - name: Install terraform
        if: steps.cache_tfdocs.outputs.cache-hit != 'true'
        run: |
          TER_VER=`curl -s https://api.github.com/repos/hashicorp/terraform/releases/latest | grep tag_name | cut -d: -f2 | tr -d \"\,\v | awk '{$1=$1};1'`
          wget https://releases.hashicorp.com/terraform/${TER_VER}/terraform_${TER_VER}_linux_amd64.zip
          unzip terraform_${TER_VER}_linux_amd64.zip
          if [ ! -d "bin" ]; then
            mkdir bin
          fi
          mv terraform bin/
          echo "PATH=$(pwd)/bin:$PATH" >> $GITHUB_ENV

      - name: init
        run: |
          terraform init 

      #- name: Terraform Plan
      #  if: github.event_name == 'pull_request'
      #  run: terraform plan -no-color -input=false
      #  continue-on-error: true

      #- name: Terraform Plan Status
      #  if: steps.plan.outcome == 'failure'
      #  run: exit 1

      ## Can update conditional if default branches are different
      #- name: Terraform Apply
      #  if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #  run: terraform apply -auto-approve -input=false