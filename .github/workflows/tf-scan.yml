name: Terraform Scan

# https://docs.github.com/en/actions/using-workflows/reusing-workflows#overview
on: workflow_call

jobs:        
  checkov:
    name: terraform checkov scan
    runs-on: ubuntu-latest
    steps:
      # see: https://github.com/actions/checkout
      - name: checkout
        uses: actions/checkout@v2
        
      # TODO: how to cache system dependencies?
      # see: https://github.com/cli/cli/issues/6175#issuecomment-1238477714
      - name: system dependencies
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          
          sudo apt-get update -y 
          sudo apt-get install -y \
                                  python3-dev \
                                  python3-venv \
                                  python3-pip \
                                  build-essential

      # see: https://github.com/actions/cache
      # NOTE: cache is keyed around `provider.tf`. See README for more information.
      - name: cache
        id: cache_checkov
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ github.repository }}-${{ hashFiles('provider.tf')}}-checkov-venv

      - name: job dependencies
        if: steps.cache_checkov.outputs.cache-hit != 'true'
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip3 install checkov

      - name: scan
        run: |
          source .venv/bin/activate
          checkov --directory . \
            --skip-check CKV2_GHA_1
            

  tfsec:
    name: terraform security scan
    runs-on: ubuntu-latest
    steps:
      # see: 
        # GITHUB_ENV: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
        # TFSEC_INSTALL_PATH: https://github.com/aquasecurity/tfsec/blob/da18cf5eeb62a9120dcae18aa034e63f2a934f40/scripts/install_linux.sh#L93
      - name: environment
        run: |
          echo "PATH=$(pwd)/bin:$PATH" >> $GITHUB_ENV
          echo "TFSEC_INSTALL_PATH=$(pwd)/bin" >> $GITHUB_ENV
        
      # https://github.com/actions/checkout
      - name: checkout
        uses: actions/checkout@v2

      # see: https://github.com/actions/cache
      - name: cache
        id: cache_tfsec
        uses: actions/cache@v3
        with:
          path: bin
          key: ${{ github.repository }}-tfsec

      - name: dependencies
        if: steps.cache_tfsec.outputs.cache-hit != 'true'
        run: |
          if [ ! -d "bin" ]; then
            mkdir bin
          fi
          curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash

      # see: https://aquasecurity.github.io/tfsec/v1.27.6/guides/configuration/config/
      - name: scan
        run: |
          tfsec \
            --config-file .terraform-security.yml